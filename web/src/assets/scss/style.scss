@import './variables';
//reset
*{
    // border-box 告诉浏览器去理解你设置的边框和内边距的值是包含在width内的。
    box-sizing: border-box;
    //高亮   outline （轮廓）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。
    outline: none;
}

html {
    font-size: 13px;
}

body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background: #f1f1f1;
    -webkit-font-smoothing: antialiased;
}

p{
    line-height: 1.5rem;
}

a {
    color: #999;
}

//width,height
.w-100{
    width: 100%;
}
.h-100{
    height: 100%;
}

//colors   定义成变量、集合
// $colors:('primary':#db9e3f,
//     'info':#4b67af,
//     'white':#fff,
//     'black':#000,
//     'light':#f9f9f9,
//     'dark-1':#343440,
//     'dark':#222,
//     'grey':#999,
//     'grey-1':#666);

@each $colorKey,
$color in $colors {

    //文字颜色
    .text-#{$colorKey} {
        color: $color;
    }

    //背景颜色
    .bg-#{$colorKey} {
        background-color: $color;
    }
}


//text align
//each方法是css中循环用的
@each $var in (left, center, right) {

    //工具类
    .text-#{$var} {
        text-align: $var !important;
    }
}

//font size
// $base-font-size:1rem;
// $font-sizes:(xxs:0.6154, //8px
//     xs: 0.7692, //10px
//     sm:0.9231, //12px
//     md:1, //13px
//     lg:1.0769, //14px
//     xl:1.2308 //16px
// );

@each $sizeKey,
$size in $font-sizes {
    .fs-#{$sizeKey} {
        font-size: $size * $base-font-size;
    }
}

//text overflow
.text-ellipsis{
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;        //多出的不换行
}

//flex
.d-flex {
    display: flex;
}

.flex-column {
    flex-direction: column;
}

//换行
.flex-wrap{
    flex-wrap: wrap;
}

//justify-content 设置主轴上的子元素排列方式
// $flex-jc:(start:flex-start,
//     end:flex-end,
//     center:center,
//     between:space-between,
//     around:space-around);

@each $key,
$value in $flex-jc {
    .jc-#{$key} {
        justify-content: $value;
    }
}

//align-items 设置侧轴上的子元素排列方式
// $flex-ai:(start:flex-start,
//     end:flex-end,
//     center:center,
//     stretch:stretch);

@each $key,
$value in $flex-ai {
    .ai-#{$key} {
        align-items: $value;
    }
}

.flex-1 {
    flex: 1;
}

.flex-grow-1 {
    flex-grow: 1;
}

//spacing
// 0-5:0 
//.mt-1  =>  margin top   .pb-2
// $spacing-types:(
//      m:margin,
//      p:padding);
// $spacing-directions:(t:top, r:right, b:bottom, l:left);
// $spacing-base-size:1rem;
// $spacing-sizes:(0:0,
//     1:0.25,
//     2:0.5,
//     3:1,
//     4:1.5,
//     5:3);

//m-0,mx-0
@each $typeKey,$type in $spacing-types {

    //.m-1
    @each $sizeKey,$size in $spacing-sizes {
        // .mt-1{margin-top:xxxxrem}
        .#{$typeKey}-#{$sizeKey} {
            #{$type}: $size * $spacing-base-size;
        }
    }

    //.mx-1   
    @each $sizeKey, $size in $spacing-sizes {
        .#{$typeKey}x-#{$sizeKey} {
            #{$type}-left: $size * $spacing-base-size;
            #{$type}-right: $size * $spacing-base-size;
        }

        .my-1 #{$typeKey}y-#{$sizeKey} {
            #{$type}-top: $size * $spacing-base-size;
            #{$type}-bottom: $size * $spacing-base-size;
        }
    }
//mt-1
    @each $directionKey,
    $direction in $spacing-directions {

        @each $sizeKey,
        $size in $spacing-sizes {

            // ./mt-1: {margin-top:0.25rem;}
            .#{$typeKey}#{$directionKey}-#{$sizeKey} {
                #{$type}-#{$direction}: $size * $spacing-base-size;
            }
        }
    }

}

//button
.btn {
    border: none;
    border-radius: 0.1538rem;
    //map-get()方法，就是从之前预定义里面选择一个
    font-size: map-get($font-sizes, 'sm')* $base-font-size;
    padding: 0.2rem 0.6rem;
}

//nav
.nav {
    display: flex;
    justify-content: space-around;
    .nav-item {
        border-bottom: 3px solid transparent;
        padding-bottom: 0.2rem;
       
        &.active {
            color: map-get($colors, 'primary');
            border-bottom-color: map-get($colors, 'primary');
        }
    }
    &.nav-inverse{
        .nav-item{
            color: map-get($colors, 'white');
            &.active {
                border-bottom:map-get($colors, 'white');
            }
        }
    }
}

//sprite   精灵图/雪碧图
.sprite{
    background: url(../images/index.png) no-repeat 0 0;
    background-size: 28.8462rem;
    display: inline-block;
    &.sprite-news{
        width: 1.7692rem;
        height: 1.5385rem;
        background-position: 63.546% 15.517%;
    }
    &.sprite-story{
        width: 1.7692rem;
        height: 1.5385rem;
        background-position:  90.483% 15.614%;
    }
    &.sprite-shore{
        width: 1.7692rem;
        height: 1.5385rem;
        background-position: 36.746% 0.924%;
    }
    &.sprite-test{
        width: 1.7692rem;
        height: 1.5385rem;
        background-position: 10.408% 15.517%;
    }
    &.sprite-newPerson{
        width: 1.7692rem;
        height: 1.5385rem;
        background-position: 89.733% 1.266%;
    }
    &.sprite-glory{
        width: 1.7692rem;
        height: 1.5385rem;
        background-position: 36.467% 15.287%;
    }
    &.sprite-identical{
        width: 1.7692rem;
        height: 1.5385rem;
        background-position: 9.302% 0.813%;
    }
    &.sprite-yingdi{
        width: 1.7692rem;
        height: 1.5385rem;
        background-position: 63.3% 0.927%;
    }
    &.sprite-wetchat{
        width: 1.7692rem;
        height: 1.5385rem;
        background-position: 0 96.207%;
    }
    &.sprite-version{
        width: 1.7692rem;
        height: 1.5385rem;
        background-position: 10.549% 41.379%;
    }
    &.sprite-arrow{
        width:0.7692rem;
        height: 0.7692rem;
        background-position: 38.577% 52.076%;
    }
}

//border
@each $dir in (top,right,bottom,left) {
    .border-#{$dir}{
        border-#{$dir}:1px solid $border-color;
    }
}